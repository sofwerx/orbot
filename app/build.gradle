apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "org.torproject.android"
        minSdkVersion 16
        targetSdkVersion 27
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    aaptOptions {
        cruncherEnabled = false
    }

    flavorDimensions "free"

    productFlavors {
        /**
        minimalperm {
            dimension "free"
            minSdkVersion 16
            applicationId 'org.torproject.android'
            targetSdkVersion 23
            maxSdkVersion 23
            versionCode 16000010
            versionName '16.0.0-RC-2-multi-SDK16'
        }**/
        fullperm {
            dimension "free"
            minSdkVersion 16
            applicationId 'org.torproject.android'
            targetSdkVersion 27
            versionCode 16030010
            versionName '16.0.3-BETA-1-tor-0.3.4.8'
            archivesBaseName = "Orbot-$versionName"
        }
    }

    splits {

        // Configures multiple APKs based on ABI. This helps keep the size down, since PT binaries can be large.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi", "armeabi-v7a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }


    }

}

dependencies {
    implementation 'com.github.delight-im:Android-Languages:v1.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation project(':orbotservice')
    implementation 'com.android.support:design:27.1.1'
    implementation 'pl.bclogic:pulsator4droid:1.0.3'
    implementation 'com.github.apl-devs:appintro:v4.2.2'
    implementation 'com.github.javiersantos:AppUpdater:2.6.4'
    implementation 'com.loopj.android:android-async-http:1.4.9'

}
